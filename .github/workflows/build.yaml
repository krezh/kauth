name: Build and Push Container

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test ./...

      - name: Build CLI binary
        run: |
          mkdir -p artifacts
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o artifacts/kauth-linux-amd64 ./cmd/kauth

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kauth-cli
          path: artifacts/

      - name: Set up QEMU
        if: github.event_name != 'pull_request'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-server
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deploy/kubernetes/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-and-test]
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Build CLI binaries for multiple platforms
        run: |
          mkdir -p dist

          # Linux amd64
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o dist/kauth-linux-amd64 ./cmd/kauth

          # Linux arm64
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o dist/kauth-linux-arm64 ./cmd/kauth

          # macOS amd64
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o dist/kauth-darwin-amd64 ./cmd/kauth

          # macOS arm64
          CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -o dist/kauth-darwin-arm64 ./cmd/kauth

          # Windows amd64
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o dist/kauth-windows-amd64.exe ./cmd/kauth

      - name: Create checksums
        run: |
          cd dist
          sha256sum * > checksums.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
          body: |
            ## kauth ${{ github.ref_name }}

            ### Container Images

            ```bash
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-server:${{ github.ref_name }}
            ```

            ### Install CLI

            **Linux (amd64):**
            ```bash
            curl -LO https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/kauth-linux-amd64
            chmod +x kauth-linux-amd64
            sudo mv kauth-linux-amd64 /usr/local/bin/kauth
            ```

            **Linux (arm64):**
            ```bash
            curl -LO https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/kauth-linux-arm64
            chmod +x kauth-linux-arm64
            sudo mv kauth-linux-arm64 /usr/local/bin/kauth
            ```

            **macOS (Intel):**
            ```bash
            curl -LO https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/kauth-darwin-amd64
            chmod +x kauth-darwin-amd64
            sudo mv kauth-darwin-amd64 /usr/local/bin/kauth
            ```

            **macOS (Apple Silicon):**
            ```bash
            curl -LO https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/kauth-darwin-arm64
            chmod +x kauth-darwin-arm64
            sudo mv kauth-darwin-arm64 /usr/local/bin/kauth
            ```

            **Windows (amd64):**
            ```powershell
            curl.exe -LO https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/kauth-windows-amd64.exe
            ```

            ### Verify checksums

            ```bash
            curl -LO https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/checksums.txt
            sha256sum -c checksums.txt
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
